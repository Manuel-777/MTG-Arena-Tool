/* eslint-disable */
// GENERATED FILE; DO NOT EDIT
declare namespace SharedCssNamespace {
  export interface ISharedCss {
    absolute: string;
    autoWidth: string;
    auto_width: string;
    back: string;
    backBlue: string;
    backGreen: string;
    backRed: string;
    back_blue: string;
    back_green: string;
    back_red: string;
    blackBright: string;
    blackBrightBg: string;
    black_bright: string;
    black_bright_bg: string;
    blue: string;
    blueBright: string;
    blueBrightBg: string;
    blue_bright: string;
    blue_bright_bg: string;
    button: string;
    "card-hover-dfc": string;
    "card-hover-main": string;
    cardHoverDfc: string;
    cardHoverMain: string;
    "click-on": string;
    clickOn: string;
    close: string;
    green: string;
    greenBright: string;
    greenBrightBg: string;
    green_bright: string;
    green_bright_bg: string;
    hidden: string;
    hoverCardQuantity: string;
    hoverLabel: string;
    hover_card_quantity: string;
    hover_label: string;
    loader: string;
    loaderDfc: string;
    loader_dfc: string;
    mainHover: string;
    mainHoverContainer: string;
    mainHoverDfc: string;
    mainWrapper: string;
    main_hover: string;
    main_hover_container: string;
    main_hover_dfc: string;
    main_wrapper: string;
    mana0: string;
    mana1: string;
    mana10: string;
    mana11: string;
    mana12: string;
    mana13: string;
    mana14: string;
    mana15: string;
    mana16: string;
    mana17: string;
    mana18: string;
    mana19: string;
    mana2: string;
    mana20: string;
    mana3: string;
    mana4: string;
    mana5: string;
    mana6: string;
    mana7: string;
    mana8: string;
    mana9: string;
    manaB: string;
    manaBg: string;
    manaBlack: string;
    manaBlue: string;
    manaBr: string;
    manaC: string;
    manaColorless: string;
    manaG: string;
    manaGreen: string;
    manaGu: string;
    manaGw: string;
    manaMulti: string;
    manaR: string;
    manaRed: string;
    manaRg: string;
    manaRw: string;
    manaS16: string;
    manaS20: string;
    manaU: string;
    manaUb: string;
    manaUr: string;
    manaW: string;
    manaWb: string;
    manaWhite: string;
    manaWu: string;
    manaX: string;
    mana_0: string;
    mana_1: string;
    mana_10: string;
    mana_11: string;
    mana_12: string;
    mana_13: string;
    mana_14: string;
    mana_15: string;
    mana_16: string;
    mana_17: string;
    mana_18: string;
    mana_19: string;
    mana_2: string;
    mana_20: string;
    mana_3: string;
    mana_4: string;
    mana_5: string;
    mana_6: string;
    mana_7: string;
    mana_8: string;
    mana_9: string;
    mana_b: string;
    mana_bg: string;
    mana_black: string;
    mana_blue: string;
    mana_br: string;
    mana_c: string;
    mana_colorless: string;
    mana_g: string;
    mana_green: string;
    mana_gu: string;
    mana_gw: string;
    mana_multi: string;
    mana_r: string;
    mana_red: string;
    mana_rg: string;
    mana_rw: string;
    mana_s16: string;
    mana_s20: string;
    mana_u: string;
    mana_ub: string;
    mana_ur: string;
    mana_w: string;
    mana_wb: string;
    mana_white: string;
    mana_wu: string;
    mana_xp: string;
    mana_wp: string;
    mana_up: string;
    mana_bp: string;
    mana_rp: string;
    mana_gp: string;
    medScroll: string;
    med_scroll: string;
    minimize: string;
    orange: string;
    orangeBright: string;
    orangeBrightBg: string;
    orange_bright: string;
    orange_bright_bg: string;
    "ownership-stars-container": string;
    ownershipStarsContainer: string;
    pieContainer: string;
    pieContainerOuter: string;
    pie_container: string;
    pie_container_outer: string;
    red: string;
    redBright: string;
    redBrightBg: string;
    red_bright: string;
    red_bright_bg: string;
    settings: string;
    typeArt: string;
    typeCre: string;
    typeEnc: string;
    typeIconCont: string;
    typeIns: string;
    typeLan: string;
    typePla: string;
    typeSor: string;
    type_art: string;
    type_cre: string;
    type_enc: string;
    type_icon_cont: string;
    type_ins: string;
    type_lan: string;
    type_pla: string;
    type_sor: string;
    typesContainer: string;
    types_container: string;
    white: string;
    whiteBright: string;
    whiteBrightBg: string;
    white_bright: string;
    white_bright_bg: string;
    wildcardsCost: string;
    wildcards_cost: string;
    wrapper: string;
    wrapperAfter: string;
    wrapper_after: string;
    yellowBright: string;
    yellowBrightBg: string;
    yellow_bright: string;
    yellow_bright_bg: string;
  }
}

declare const SharedCssModule: SharedCssNamespace.ISharedCss & {
  /** WARNING: Only available when `css-loader` is used without `style-loader` or `mini-css-extract-plugin` */
  locals: SharedCssNamespace.ISharedCss;
};

export = SharedCssModule;
